<Window x:Name="主窗体" x:Class= "Information_summary.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Information_summary"
        mc:Ignorable="d"
        Title="文件信息摘要工具" Height="407" Width="564" ResizeMode="NoResize"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{x:Null}"
        FontFamily="{DynamicResource MaterialDesignFont}" AllowsTransparency="True" WindowStyle="None" Foreground="Black" WindowStartupLocation="CenterScreen" SnapsToDevicePixels="True" AllowDrop="True" DragEnter="主窗体_DragEnter" DragLeave="主窗体_DragLeave" Icon="512x512.ico">

    <Window.Resources>
        <Storyboard x:Key="设置打开">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="算法">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.57">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="算法">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.515">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="算法">
                <EasingDoubleKeyFrame KeyTime="0" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="算法">
                <EasingDoubleKeyFrame KeyTime="0" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="算法">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="算法">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="主体遮罩">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="主体遮罩">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.5"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="设置关闭">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="算法">
                <EasingDoubleKeyFrame KeyTime="0" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.57">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="算法">
                <EasingDoubleKeyFrame KeyTime="0" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.515">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="算法">
                <EasingDoubleKeyFrame KeyTime="0" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="算法">
                <EasingDoubleKeyFrame KeyTime="0" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="算法">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="算法">
                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="主体遮罩">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="主体遮罩">
                <SplineDoubleKeyFrame KeyTime="0" Value="0.5"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="提示打开">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="提示">
                <EasingDoubleKeyFrame KeyTime="0" Value="61.272">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.333">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:3.4" Value="0.333"/>
                <EasingDoubleKeyFrame KeyTime="0:0:4" Value="56.833">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="提示">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:3.4" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="关于打开">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="关于界面">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.286">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="关于界面">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.289">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="关于界面">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="关于界面">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="主体遮罩">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="主体遮罩">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.5"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="关于关闭">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="关于界面">
                <EasingDoubleKeyFrame KeyTime="0" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.286">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="关于界面">
                <EasingDoubleKeyFrame KeyTime="0" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.289">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="关于界面">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="关于界面">
                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="主体遮罩">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="主体遮罩">
                <SplineDoubleKeyFrame KeyTime="0" Value="0.5"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>
    <Grid x:Name="主体" AllowDrop="True">
        <Rectangle x:Name="主体背景" Fill="#FFF4F4F5" HorizontalAlignment="Left" Height="407" Stroke="{Binding Background, ElementName=添加}" VerticalAlignment="Top" Width="564" RadiusX="5" RadiusY="5"/>
        <Grid x:Name="按钮" Margin="10,35,9,337">

            <Button x:Name="添加" Content="添加文件" HorizontalAlignment="Left" Height="35" VerticalAlignment="Top" Width="105" Click="添加_Click"/>
            <Button x:Name="清除" Content="清除日志" HorizontalAlignment="Left" Height="35" Margin="110,0,0,0" VerticalAlignment="Top" Width="105" Click="清除_Click"/>
            <Button x:Name="复制" Content="复制信息" HorizontalAlignment="Left" Height="35" Margin="220,0,0,0" VerticalAlignment="Top" Width="105" Click="复制_Click"/>
            <Button x:Name="保存" Content="保存文件" HorizontalAlignment="Left" Height="35" Margin="330,0,0,0" VerticalAlignment="Top" Width="105" Click="保存_Click"/>
            <Button x:Name="设置" Content="摘要算法" HorizontalAlignment="Left" Height="35" Margin="440,0,0,0" VerticalAlignment="Top" Width="105" Click="设置_Click"/>
        </Grid>
        <Grid x:Name="输出" Margin="10,75,10,10">
            <ScrollViewer x:Name="框" HorizontalAlignment="Left" Height="322" VerticalAlignment="Top" Width="545" Margin="0,0,-1,0" HorizontalScrollBarVisibility="Visible" AllowDrop="True" Foreground="Black">
                <TextBox x:Name="输出信息" HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Top" HorizontalScrollBarVisibility= "Visible" BorderBrush="{x:Null}" CaretBrush="#FF0288D1" MinWidth="520" MinHeight="322" FontFamily="微软雅黑" AllowDrop="True" Background="#02000000" />

            </ScrollViewer>
            <Rectangle x:Name="输出背景" HorizontalAlignment="Left" Height="324.005" Stroke="{Binding Background, ElementName=添加}" VerticalAlignment="Top" Width="546.986" Margin="-0.98,-1,-2.006,-1.005" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.CanContentScroll="True" SnapsToDevicePixels="True"/>
        </Grid>
        <Grid x:Name="标题" HorizontalAlignment="Left" Height="30" VerticalAlignment="Top" Width="564" MouseMove="标题_MouseMove" Background="#00000000">
            <ProgressBar x:Name="加载条" Margin="10,27.333,9,-1.334" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{Binding Background, ElementName=添加}" />
            <materialDesign:PackIcon x:Name="标题图标" Kind="InformationOutline" HorizontalAlignment="Left" Height="20" Margin="5,5,0,0" VerticalAlignment="Top" Width="22.25" Foreground="{Binding Background, ElementName=添加}"/>
            <Label x:Name="标题文本" Content="文件信息摘要生成" HorizontalAlignment="Left" Height="27.75" Margin="32.25,2.25,0,0" VerticalAlignment="Top" Width="127.75" VerticalContentAlignment="Center" FontWeight="Bold" FontSize="14"/>
            <Button x:Name="关闭窗体" Style="{StaticResource MaterialDesignIconButton}" ToolTip="关闭" Margin="532.664,1.333,1.335,-1.334" Height="30" Width="30" Foreground="{Binding Background, ElementName=添加}" Click="关闭窗体_Click">
                <materialDesign:PackIcon Kind="Close"   />
            </Button>
            <Button x:Name="最小化" Style="{StaticResource MaterialDesignIconButton}" ToolTip="最小化" Margin="502.664,1.334,31.335,-1.333" Height="30" Width="30" Foreground="{Binding Background, ElementName=添加}" Click="最小化_Click">
                <materialDesign:PackIcon Kind="Minus"  />
            </Button>
            <ToggleButton x:Name="前端显示"
  Style="{StaticResource MaterialDesignSwitchToggleButton}"
  ToolTip="前端显示" Margin="412.664,1.334,91.336,-1.334" Click="ToggleButton_Click">
                <materialDesign:PackIcon
    Kind="Pin"
    RenderTransformOrigin=".5,.5">
                    <materialDesign:PackIcon.RenderTransform>
                        <RotateTransform
        Angle="45" />
                    </materialDesign:PackIcon.RenderTransform>
                </materialDesign:PackIcon>
                <materialDesign:ToggleButtonAssist.OnContent>
                    <materialDesign:PackIcon
      Kind="Pin" />
                </materialDesign:ToggleButtonAssist.OnContent>
            </ToggleButton>
            <Button x:Name="关于" Style="{StaticResource MaterialDesignIconButton}" ToolTip="关于" Margin="472.664,1.333,61.335,-1.334" Height="30" Width="30" Foreground="{Binding Background, ElementName=添加}" Click="关于_Click">
                <materialDesign:PackIcon Kind="InformationVariant"  />
            </Button>

        </Grid>
        <Rectangle x:Name="主体遮罩" Fill="Black" HorizontalAlignment="Left" Height="407" Stroke="{Binding Background, ElementName=添加}" VerticalAlignment="Top" Width="564" RadiusX="5" RadiusY="5" Visibility="Collapsed"/>
        <Grid x:Name="算法" Margin="40,55" RenderTransformOrigin="0.5,0.5" Visibility="Collapsed">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>
            <Rectangle x:Name="算法背景" Fill="White" HorizontalAlignment="Left" Height="297" RadiusY="5" RadiusX="5" VerticalAlignment="Top" Width="484" Stroke="{Binding Background, ElementName=添加}"/>
            <Label x:Name="算法标题" Content="你可以在这里选择生成摘要的详细设置" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="30,0,0,0" Width="290" Height="30" FontSize="14" FontFamily="微软雅黑" VerticalContentAlignment="Bottom"/>
            <materialDesign:PackIcon x:Name="算法图标" Kind="CogOutline" HorizontalAlignment="Left" Height="25" VerticalAlignment="Top" Width="30" Margin="0,3.33,0,0" Foreground="{Binding Background, ElementName=添加}"/>
            <Rectangle x:Name="算法边框" HorizontalAlignment="Left" Height="252" Margin="10,35,0,0" RadiusY="5" RadiusX="5" VerticalAlignment="Top" Width="464" Stroke="{Binding Background, ElementName=添加}"/>
            <Button x:Name="关闭算法" Style="{StaticResource MaterialDesignIconButton}" ToolTip="关闭" Margin="450.667,3.33,3.332,263.67" Height="30" Width="30" Foreground="{Binding Background, ElementName=添加}" Click="关闭算法_Click">
                <materialDesign:PackIcon Kind="Close"  />
            </Button>
            <Canvas x:Name="文件选择" Margin="20,46.4,314,47">
                <CheckBox x:Name="名称" Content="文件名称" Style="{StaticResource MaterialDesignCheckBox}" Height="30" Canvas.Left="10" Canvas.Top="23.6" Width="140" />
                <CheckBox x:Name="大小" Content="文件大小" Style="{StaticResource MaterialDesignCheckBox}" Height="30" Canvas.Left="10" Canvas.Top="53.6" Width="140" />
                <CheckBox x:Name="创建" Content="创建时间" Style="{StaticResource MaterialDesignCheckBox}" Height="30" Canvas.Left="10" Canvas.Top="83.6" Width="140" />
                <CheckBox x:Name="修改" Content="修改时间" Style="{StaticResource MaterialDesignCheckBox}" Height="30" Canvas.Left="10" Canvas.Top="113.6" Width="140" />
                <CheckBox x:Name="版本" Content="版本信息" Style="{StaticResource MaterialDesignCheckBox}" Height="30" Canvas.Left="10" Canvas.Top="143.6" Width="140" />
                <CheckBox x:Name="类型" Content="文件类型" Style="{StaticResource MaterialDesignCheckBox}" Height="30" Canvas.Left="10" Canvas.Top="173.6" Width="140" />
                <Label x:Name="文件信息" Content="文件信息：" HorizontalAlignment="Left" VerticalAlignment="Top" Width="150"/>
            </Canvas>
            <Canvas x:Name="算法选择" Margin="170,46.4,10,47">
                <CheckBox x:Name="MD5" Content="MD5" Style="{StaticResource MaterialDesignCheckBox}" Height="30" Canvas.Left="10" Canvas.Top="23.6" Width="140" />
                <CheckBox x:Name="CRC32" Content="CRC32" Style="{StaticResource MaterialDesignCheckBox}" Height="30" Canvas.Left="10" Canvas.Top="53.6" Width="140" />
                <CheckBox x:Name="SHA1" Content="SHA-1" Style="{StaticResource MaterialDesignCheckBox}" Height="30" Canvas.Left="10" Canvas.Top="113.6" Width="140" />
                <CheckBox x:Name="SHA256" Content="SHA-256" Style="{StaticResource MaterialDesignCheckBox}" Height="30" Canvas.Left="10" Canvas.Top="143.6" Width="140" />
                <CheckBox x:Name="SHA384" Content="SHA-384" Style="{StaticResource MaterialDesignCheckBox}" Height="30" Canvas.Left="10" Canvas.Top="173.6" Width="140" />
                <CheckBox x:Name="SHA512" Content="SHA-512" Style="{StaticResource MaterialDesignCheckBox}" Height="30" Canvas.Left="150" Canvas.Top="23.6" Width="140" />
                <CheckBox x:Name="Ripemd" Content="RIPEMD160" Style="{StaticResource MaterialDesignCheckBox}" Height="30" Canvas.Left="10" Canvas.Top="83.6" Width="140" />
                <Label x:Name="摘要算法" Content="摘要算法：" HorizontalAlignment="Left" VerticalAlignment="Top" Width="150"/>
            </Canvas>
            <Label x:Name="版权" Content="Copyright © xcz  2021" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="307.923,263.4,0,0" Width="166.077" HorizontalContentAlignment="Right" MouseUp="版权_MouseUp"/>
        </Grid>
        <Grid x:Name="提示" HorizontalAlignment="Left" Height="30" VerticalAlignment="Top" Width="100" Margin="232,360,0,0" RenderTransformOrigin="0.5,0.5" Visibility="Collapsed">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>
            <Rectangle x:Name="提示背景" HorizontalAlignment="Left" Height="30" Stroke="Black" VerticalAlignment="Top" Width="100" Fill="{Binding Background, ElementName=添加}" RadiusY="5" RadiusX="5"/>
            <Label x:Name="提示信息" Content="Label" HorizontalAlignment="Left" VerticalAlignment="Top" Height="30" Width="100" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Foreground="White"/>
        </Grid>
        <Grid x:Name="拖放" AllowDrop="True" Drop="拖放_Drop" Visibility="Collapsed">
            <Rectangle x:Name="拖放背景" HorizontalAlignment="Left" Height="407" Stroke="{Binding Background, ElementName=添加}" VerticalAlignment="Top" Width="564" RadiusX="5" RadiusY="5" AllowDrop="True">
                <Rectangle.Fill>
                    <SolidColorBrush Color="#FF747474" Opacity="0.5"/>
                </Rectangle.Fill>
            </Rectangle>
            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="松开鼠标按键以完拖放！" VerticalAlignment="Top" Margin="0,80,0,0" Height="45" Width="564" TextAlignment="Center" FontSize="24" FontFamily="微软雅黑"/>
            <Rectangle x:Name="rectangle" Stroke="#FF000000" StrokeThickness="3" StrokeDashArray="2 2"
                                                       SnapsToDevicePixels="True" Margin="75,130,75,92" RadiusX="5" RadiusY="5"/>
        </Grid>
        <Grid x:Name="关于界面" Margin="57,64,57,63" RenderTransformOrigin="0.5,0.5" Visibility="Collapsed">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>
            <Rectangle x:Name="关于背景" Fill="White" HorizontalAlignment="Left" Height="280" RadiusY="5" RadiusX="5" VerticalAlignment="Top" Width="450" Stroke="{Binding Background, ElementName=添加}"/>
            <Rectangle x:Name="声明背景" Margin="5,90,5,5" Stroke="{Binding Background, ElementName=添加}" RadiusX="5" RadiusY="5"/>
            <Label x:Name="软件介绍" Content="软件名称： 文件信息摘要生成&#xA;版本：        1.0.0.0&#xA;版权：        Copyright © xcz 2021&#xA;反馈邮箱： xczzhouqian@gmail.com" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="100,10,0,0" Width="228" Height="80"/>
            <materialDesign:PackIcon Kind="InformationOutline" x:Name="关于图标" HorizontalAlignment="Left" Height="80" VerticalAlignment="Top" Width="80" MouseUp="图标_MouseUp" Foreground="{Binding Background, ElementName=添加}" Background="#00000000" Cursor="Hand" Margin="10,10,0,0"/>
            <ScrollViewer x:Name="声明" HorizontalAlignment="Left" Height="175" VerticalAlignment="Top" Width="430" Margin="10,95,0,0" Padding="1">
                <TextBlock x:Name="声明文字" HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Top" Width="410"><Span FontFamily="宋体"><Run Text="1."/></Span><Span FontFamily="宋体"><Run Text="本软件只限于自然人及非商业用途的使用。这表示任何自然人均可在中华人民共和国境内以非商业用途免费使用本软件。任何组织使用本软件，或任何自然人基于商业用途使用本软件均构成对许可人及其附属合作伙伴的权利侵害，可能导致民事或刑事追究。"/></Span><LineBreak/><Span FontFamily="宋体"><Run Text="2."/></Span><Span FontFamily="宋体"><Run Text="任何人均不得违反中国相关法律、法规及政策的规定使用本软件，或将本软件用于任何违法目的。"/></Span><LineBreak/><Span FontFamily="宋体"><Run Text="3."/></Span><Span FontFamily="宋体"><Run Text="用户在使用本软件过程中应尊重权利人的知识产权，不得修改或去除本软件所附带的版权及其它知识产权标识。"/></Span><LineBreak/><Span FontFamily="宋体"><Run Text="4."/></Span><Span FontFamily="等线"><Run Text=" "/></Span><Span FontFamily="宋体"><Run Text="软件内的功能、代码、源码、一系列资源部分来源于网络、用户提供、原创、个人经验！禁止非法逆向及传播本软件源码。"/></Span><LineBreak/><Span FontFamily="宋体"><Run Text="若本软件侵犯了贵开发者的权利，请联系我们，我们会尽快处理。"/></Span><LineBreak/><Span FontFamily="宋体"><Run Text="5"/></Span><Span><Run Text="."/></Span><Span FontFamily="宋体"><Run Text="安装并使用本软件意味着接受本许可的这些条款和条件。如果您不同意本许可的条款，您必须从您的存储设备中删除本软件全部文件并终止使用本软件。"/></Span></TextBlock>
            </ScrollViewer>
            <materialDesign:PackIcon ToolTip="开源项目" Kind="Github" x:Name="开源项目" HorizontalAlignment="Left" Height="25" VerticalAlignment="Top" Width="25" MouseUp="图标_MouseUp" Foreground="{Binding Background, ElementName=添加}" Background="#00000000" Cursor="Hand" Margin="320,50,0,0"/>
            <materialDesign:PackIcon Kind="DotNet" x:Name="开源项目_Copy" HorizontalAlignment="Left" Height="25" VerticalAlignment="Top" Width="25" Foreground="{Binding Background, ElementName=添加}" Background="#00000000" Cursor="Hand" Margin="362.667,50,0,0"/>
            <materialDesign:PackIcon Kind="LanguageCsharp"  x:Name="开源项目_Copy1" HorizontalAlignment="Left" Height="25" VerticalAlignment="Top" Width="25" Foreground="{Binding Background, ElementName=添加}" Background="#00000000" Cursor="Hand" Margin="410,50,0,0"/>
            <Button x:Name="关闭关于" Style="{StaticResource MaterialDesignIconButton}" ToolTip="关闭" Height="Auto" Width="Auto" Foreground="{Binding Background, ElementName=添加}" Click="关闭关于_Click" Margin="415,5,5,245">
                <materialDesign:PackIcon Kind="Close"  />
            </Button>
        </Grid>

    </Grid>
</Window>
